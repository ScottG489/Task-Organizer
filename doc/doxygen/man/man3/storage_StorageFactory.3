.TH "storage::StorageFactory" 3 "Wed Sep 28 2011" "Task-Organizer" \" -*- nroff -*-
.ad l
.nh
.SH NAME
storage::StorageFactory \- 
.PP
Interface for getting a storage instance'\&.  

.SH SYNOPSIS
.br
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "def \fB__init__\fP"
.br
.ti -1c
.RI "def \fBget\fP"
.br
.RI "\fIReturn a Task storage instance'\&. \fP"
.in -1c
.SH "Detailed Description"
.PP 
Interface for getting a storage instance'\&. 

Public methods: get(storage_type, kwargs)
.PP
Select the type of storage in which to store Task objects and pass arguments to the specified storage classes constructor'\&. 
.PP
Definition at line 874 of file storage\&.py'\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "def storage::StorageFactory::__init__ (self)"
.PP
Definition at line 875 of file storage\&.py'\&.
.SH "Member Function Documentation"
.PP 
.SS "def storage::StorageFactory::get (storage_type, kwargs)"
.PP
Return a Task storage instance'\&. Args: storage_type (str): Name of the desired storage type'\&. kwargs (str): Keyword arguments specific to each storage type'\&.
.PP
Returns: storage_instance (\fBStorage\fP): Child instance of a storage class'\&.
.PP
Using the given storage type, create an instance with the given optional keyword arguments and return the storage instance'\&. 
.PP
Definition at line 895 of file storage\&.py'\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Task-Organizer from the source code'\&.
