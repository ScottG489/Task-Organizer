.TH "storage::FileStorage" 3 "Sat Sep 24 2011" "Task-Organizer" \" -*- nroff -*-
.ad l
.nh
.SH NAME
storage::FileStorage \- 
.PP
Interface for storing Tasks to a file'\&.  

.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBstorage::Storage\fP'\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "def \fB__init__\fP"
.br
.ti -1c
.RI "def \fBadd\fP"
.br
.RI "\fIAdd a Task to the file storage'\&. \fP"
.ti -1c
.RI "def \fBfind\fP"
.br
.RI "\fIReturn a Task given it's key'\&. \fP"
.ti -1c
.RI "def \fBget_all\fP"
.br
.RI "\fIReturn a list of all Tasks'\&. \fP"
.ti -1c
.RI "def \fBupdate\fP"
.br
.RI "\fIUpdate an existing Task in the file storage'\&. \fP"
.ti -1c
.RI "def \fBdelete\fP"
.br
.RI "\fIDelete an existing Task in the file storage'\&. \fP"
.ti -1c
.RI "def \fBsearch\fP"
.br
.RI "\fIReturn a Task list given a search Task'\&. \fP"
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "\fBtask_filename\fP"
.br
.ti -1c
.RI "\fBkey_filename\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
Interface for storing Tasks to a file'\&. 

Kwargs/Instance Vars: task_filename (str): Name of file in which to store the Task list'\&. key_filename (str): Name of file in which to store the next key'\&.
.PP
Public methods: add(task_item) find(key = None) \fBget_all()\fP update(task_item) delete(key) search(search_task)
.PP
Reads and writes Task objects from a file as a single list'\&. 
.PP
Definition at line 95 of file storage\&.py'\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "def storage::FileStorage::__init__ (self, task_filename = \fC'taskfile'\fP, key_filename = \fC'keyfile'\fP)"
.PP
Definition at line 96 of file storage\&.py'\&.
.SH "Member Function Documentation"
.PP 
.SS "def storage::FileStorage::add (self, task_item)"
.PP
Add a Task to the file storage'\&. Args: task_item (Task): The Task object to be added to storage'\&.
.PP
Returns: task_item'\&.key (int): Newly added Task's key'\&.
.PP
Raises:
.PP
The Task object is given a key and appended to the list of Tasks in the file'\&. 
.PP
Reimplemented from \fBstorage::Storage\fP'\&.
.PP
Definition at line 169 of file storage\&.py'\&.
.SS "def storage::FileStorage::delete (self, key)"
.PP
Delete an existing Task in the file storage'\&. Args: key (int): The key for the desired Task object to delete'\&.
.PP
Returns: key_match (int): Task's key that was deleted in storage'\&.
.PP
Raises:
.PP
Using the given key, iterate through the Task list and delete the matching Task'\&. If none is found, nothing is deleted and return None'\&. 
.PP
Reimplemented from \fBstorage::Storage\fP'\&.
.PP
Definition at line 299 of file storage\&.py'\&.
.SS "def storage::FileStorage::find (self, key = \fCNone\fP)"
.PP
Return a Task given it's key'\&. Args: key (int): The key for the desired Task object'\&.
.PP
Returns: task_item (Task): Task with matching key'\&.
.PP
Raises:
.PP
Using the given key, iterate through the Task list and return the Task with matching key'\&. If none is found return None'\&. 
.PP
Reimplemented from \fBstorage::Storage\fP'\&.
.PP
Definition at line 206 of file storage\&.py'\&.
.SS "def storage::FileStorage::get_all (self)"
.PP
Return a list of all Tasks'\&. Returns: task_list (Task[]): List of every task in storage'\&.
.PP
Raises: 
.PP
Reimplemented from \fBstorage::Storage\fP'\&.
.PP
Definition at line 233 of file storage\&.py'\&.
.SS "def storage::FileStorage::search (self, search_task)"
.PP
Return a Task list given a search Task'\&. Args: search_task (Task): The Task to be used for searching'\&.
.PP
Returns: task_search_list (Task[]): List of Tasks matching search criteria'\&.
.PP
Raises:
.PP
Using the given search Task, iterate through the Task list and append matching Tasks to a Task list then return this list'\&. If none matches, return None'\&. 
.PP
Reimplemented from \fBstorage::Storage\fP'\&.
.PP
Definition at line 337 of file storage\&.py'\&.
.SS "def storage::FileStorage::update (self, task_item)"
.PP
Update an existing Task in the file storage'\&. Args: task_item (Task): The Task object to be updated'\&.
.PP
Returns: key_match (int): Task's key that was updating in storage'\&.
.PP
Raises:
.PP
Using the given Task's key, iterate through the Task list to find a matching key, replace the matching Task with the given Task, and return the old Task'\&. If none is found, update nothing and return None'\&. 
.PP
Reimplemented from \fBstorage::Storage\fP'\&.
.PP
Definition at line 261 of file storage\&.py'\&.
.SH "Member Data Documentation"
.PP 
.SS "\fBstorage::FileStorage::key_filename\fP"
.PP
Definition at line 96 of file storage\&.py'\&.
.SS "\fBstorage::FileStorage::task_filename\fP"
.PP
Definition at line 96 of file storage\&.py'\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Task-Organizer from the source code'\&.
